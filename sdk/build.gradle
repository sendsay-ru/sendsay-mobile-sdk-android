apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply from: 'publish-maven.gradle'
apply from: '../jacoco.gradle'
apply plugin: 'com.panaxeo.shadow-aar'
apply plugin: 'com.google.devtools.ksp'
apply plugin: 'androidx.room'

android {

    namespace 'com.sendsay.sdk'
    compileSdk 35

    buildFeatures {
        buildConfig = true
        viewBinding true
    }

    defaultConfig {
        minSdkVersion 17
        targetSdk 35
        buildConfigField "String", "SENDSAY_VERSION_NAME", '"4.1.0"'
        buildConfigField "int", "SENDSAY_VERSION_CODE", "82"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'proguard-rules.pro'
        testBuildType "unitTesting"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions { jvmTarget = "17" }

    lintOptions {
        warning "MissingPermission"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled  true
        }
        unitTesting {
            initWith debug
            defaultConfig.minSdkVersion 19
        }
    }

    room {
        schemaDirectory("$projectDir/schemas")
    }

    ksp {
        arg("room.generateKotlin", "true")
    }

    testOptions.unitTests.includeAndroidResources = true
    testOptions {
        unitTests.all {
            jvmArgs '-Xmx2g'
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    // Database
    implementation("androidx.room:room-runtime:$room_version")
    implementation 'androidx.compose.ui:ui-text-desktop:1.7.0'
    annotationProcessor("androidx.room:room-compiler:$room_version")

    // To use Kotlin symbol processing tool (ksp)
    ksp("androidx.room:room-compiler:$room_version")

    implementation 'com.squareup.okhttp3:okhttp:4.9.3'
    // Deserialization
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'org.danilopianini:gson-extras:0.2.2'
    // OkHttp Debugger Logger
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.3'
    // Google WorkManager
    implementation "androidx.work:work-runtime-ktx:2.7.1"
    // View for in-app messages
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    // Okhttp HTTP compression interceptor
    implementation 'com.squareup.okhttp3:okhttp-brotli:4.9.1'
    // Html handling for in-app freeform messages
    implementation 'org.jsoup:jsoup:1.15.4'
    // Images handling
    implementationEmbed 'io.coil-kt:coil:1.4.0'
    implementationEmbed 'io.coil-kt:coil-base:1.4.0'
    implementationEmbed 'io.coil-kt:coil-gif:1.4.0'
    implementationEmbed 'io.coil-kt:coil-svg:1.4.0'
    // Custom Tabs
    implementation 'androidx.browser:browser:1.5.0'
    // Kotlin reflection
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    // Kotlin DateTime
    implementation "org.jetbrains.kotlinx:kotlinx-datetime:0.7.1"

    // Base Test
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'androidx.test:core:1.4.0'
    // Kotlin jUnit
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit:1.2.40'
    // Networking Testing
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.9.1'
    testImplementation 'com.github.gmazzo:okhttp-mock:1.4.1'
    // Improved Unit Testing
    testImplementation "org.robolectric:robolectric:4.14.1"
    // Co-Routines
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.4'
    // Mockk
    testImplementation "io.mockk:mockk:1.12.8"
    // WorkManager testing
    testImplementation 'androidx.work:work-testing:2.4.0'
}

shadowAar {
    transformR = "com.sendsay.sdk.R"
    repackages.put("coil", "freeze.coil")
}

// turn logging for unit tests
tasks.withType(Test) {
    systemProperty "robolectric.logging", "stdout"
}
