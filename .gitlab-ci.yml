#image: sendsay/android-ci
image: openjdk:8-jdk

variables:
  ANDROID_TARGET_SDK: "35"
  ANDROID_BUILD_TOOLS: "36.0.0"
  ANDROID_SDK_TOOLS: "13114758"

before_script:
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
  - wget --quiet --output-document=android-sdk.zip "https://dl.google.com/android/repository/commandlinetools-linux-${ANDROID_SDK_TOOLS}_latest.zip"
  - unzip -d android-sdk-linux android-sdk.zip
  - echo y | android-sdk-linux/cmdline-tools/bin/sdkmanager "platforms;android-${ANDROID_TARGET_SDK}" >/dev/null
  - echo y | android-sdk-linux/cmdline-tools/bin/sdkmanager "platform-tools" >/dev/null
  - echo y | android-sdk-linux/cmdline-tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
  - chmod +x ./gradlew
  # temporarily disable checking for EPIPE error and use yes to accept all licenses
  - set +o pipefail
  - yes | android-sdk-linux/cmdline-tools/bin/sdkmanager --licenses
  - set -o pipefail
stages:
#  - test
  - build
  - release
cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches

#lintDebug:
#  stage: test
#  script:
#    - ./gradlew -Pci --console=plain :app:testDebug
#    - ./gradlew -Pci --console=plain :app:lintDebug -PbuildDir=lint

assemble_release:
  stage: build
  script:
    - echo "Building the project:"
    - echo "Locate keystore."
    - export ANDROID_KEYSTORE_FILE_PATH=$(cat "$SECURE_FILES_DIR/Sendsay.jks") # Path provided by GitLab Secure Files
    - echo "Starting gradlew."
    - ./gradlew assembleRelease
#    - cp app/build/outputs/apk/release/app-release.apk app-release.apk
  rules:
    - if: $CI_COMMIT_REF_NAME == "ci-release-test" # Trigger this job only on tags
      when: always # or on_success # or 'never'
    - when: manual # or 'always'
      allow_failure: true
  artifacts:
    paths:
      - app/build/outputs/apk/*/release/*.apk
#      - app-release.apk

create_internal_publish_release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG # Trigger this job only on tags
  script:
    - echo "Releasing by TAG:"
    - release-cli create --name "Release $CI_COMMIT_TAG" --tag-name $CI_COMMIT_TAG --description "Release notes for $CI_COMMIT_TAG" --assets-link "{\"name\":\"*.apk\", \"url\":\"${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/jobs/${CI_JOB_ID}/artifacts/*.apk\"}"